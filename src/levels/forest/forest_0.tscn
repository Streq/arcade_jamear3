[gd_scene load_steps=43 format=2]

[ext_resource path="res://assets/shader/palette.gdshader" type="Shader" id=1]
[ext_resource path="res://src/flapper/presets/fast_glider.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/terrain/terrain.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/color/palettes/forest_palette.tscn" type="PackedScene" id=4]
[ext_resource path="res://assets/texture/white_square.png" type="Texture" id=5]
[ext_resource path="res://assets/texture/diagonal_rects.png" type="Texture" id=6]
[ext_resource path="res://assets/texture/diagonal_rects_border.png" type="Texture" id=7]

[sub_resource type="Shader" id=23]
code = "shader_type canvas_item;
uniform int palette_size = 4;
uniform float offset : hint_range(0, 8, 1);
uniform sampler2D palette;
uniform float blue_index_offset = 0.0;


void fragment(){
	vec4 tex = texture(TEXTURE, UV);
	//used as index for the palette texture
	float blue_1 = tex.b;
	
	float palette_index = mod(blue_1 * (255.0) - blue_index_offset + offset+0.5,float(palette_size));
	float h_pixel_size = 1.0/float(palette_size);
	vec2 palette_pixel = vec2(palette_index*(h_pixel_size), 0.0);
	
	COLOR.rgb = texture(palette, palette_pixel).rgb;
	COLOR.a = tex.a;
	
}"

[sub_resource type="Image" id=56]
data = {
"data": PoolByteArray( 33, 16, 16, 255, 90, 148, 0, 255, 206, 231, 123, 255, 255, 255, 255, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 4
}

[sub_resource type="ImageTexture" id=31]
flags = 0
flags = 0
image = SubResource( 56 )
size = Vector2( 4, 1 )

[sub_resource type="ShaderMaterial" id=26]
resource_local_to_scene = true
shader = SubResource( 23 )
shader_param/palette_size = 4
shader_param/offset = 0.0
shader_param/blue_index_offset = 0.0
shader_param/palette = SubResource( 31 )

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform int palette_size = 4;
uniform float offset : hint_range(0, 8, 1);
uniform sampler2D palette;
uniform float blue_index_offset = 0.0;


void fragment(){
	vec4 tex = texture(TEXTURE, UV);
	//used as index for the palette texture
	float blue_1 = tex.b;
	
	float palette_index = mod(blue_1 * (255.0) - blue_index_offset + offset+0.5,float(palette_size));
	float h_pixel_size = 1.0/float(palette_size);
	vec2 palette_pixel = vec2(palette_index*(h_pixel_size), 0.0);
	
	COLOR.rgb = texture(palette, palette_pixel).rgb;
	COLOR.a = tex.a;
	
}"

[sub_resource type="Image" id=57]
data = {
"data": PoolByteArray( 33, 16, 16, 255, 90, 148, 0, 255, 206, 231, 123, 255, 255, 255, 255, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 4
}

[sub_resource type="ImageTexture" id=48]
flags = 0
flags = 0
image = SubResource( 57 )
size = Vector2( 4, 1 )

[sub_resource type="ShaderMaterial" id=43]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/palette_size = 4
shader_param/offset = 3.0
shader_param/blue_index_offset = 0.0
shader_param/palette = SubResource( 48 )

[sub_resource type="TileSet" id=40]
0/name = "diagonal_rects.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 112, 112 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 16, 16 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "diagonal_rects_border.png 1"
1/texture = ExtResource( 7 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 0, 0, 112, 112 )
1/tile_mode = 2
1/autotile/icon_coordinate = Vector2( 0, 0 )
1/autotile/tile_size = Vector2( 16, 16 )
1/autotile/spacing = 0
1/autotile/occluder_map = [  ]
1/autotile/navpoly_map = [  ]
1/autotile/priority_map = [  ]
1/autotile/z_index_map = [  ]
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0

[sub_resource type="Image" id=58]
data = {
"data": PoolByteArray( 33, 16, 16, 255, 90, 148, 0, 255, 206, 231, 123, 255, 255, 255, 255, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 4
}

[sub_resource type="ImageTexture" id=51]
flags = 0
flags = 0
image = SubResource( 58 )
size = Vector2( 4, 1 )

[sub_resource type="ShaderMaterial" id=52]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/palette_size = 4
shader_param/offset = 2.0
shader_param/blue_index_offset = 0.0
shader_param/palette = SubResource( 51 )

[sub_resource type="Image" id=59]
data = {
"data": PoolByteArray( 33, 16, 16, 255, 90, 148, 0, 255, 206, 231, 123, 255, 255, 255, 255, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 4
}

[sub_resource type="ImageTexture" id=54]
flags = 0
flags = 0
image = SubResource( 59 )
size = Vector2( 4, 1 )

[sub_resource type="ShaderMaterial" id=55]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/palette_size = 4
shader_param/offset = 1.0
shader_param/blue_index_offset = 0.0
shader_param/palette = SubResource( 54 )

[sub_resource type="Image" id=60]
data = {
"data": PoolByteArray( 33, 16, 16, 255, 90, 148, 0, 255, 206, 231, 123, 255, 255, 255, 255, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 4
}

[sub_resource type="ImageTexture" id=45]
flags = 0
flags = 0
image = SubResource( 60 )
size = Vector2( 4, 1 )

[sub_resource type="ShaderMaterial" id=29]
resource_local_to_scene = true
shader = SubResource( 23 )
shader_param/palette_size = 4
shader_param/offset = 0.0
shader_param/blue_index_offset = 0.0
shader_param/palette = SubResource( 45 )

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}

[sub_resource type="Animation" id=5]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 14.0 ]
}

[sub_resource type="Animation" id=6]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 27.0, 25.0, 26.0, 14.0 ]
}

[sub_resource type="Animation" id=7]
resource_name = "die"
tracks/0/type = "value"
tracks/0/path = NodePath(".:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("hurtbox/CollisionShape2D:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=8]
length = 0.7
tracks/0/type = "method"
tracks/0/path = NodePath("flap_action")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "strong_failed"
} ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("pivot/Sprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 22.0, 18.0, 17.0, 16.0, 15.0, 0.0, 14.0 ]
}

[sub_resource type="Animation" id=9]
length = 0.7
tracks/0/type = "method"
tracks/0/path = NodePath("flap_action")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "weak_failed"
} ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("pivot/Sprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = false
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27.0, 9.0, 4.0, 3.0, 2.0, 1.0, 5.0 ]
}

[sub_resource type="Animation" id=10]
length = 0.5
step = 0.05
tracks/0/type = "method"
tracks/0/path = NodePath("flap_action")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "strong"
} ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("state_machine/flap")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "clear_buffer"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("pivot/Sprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 22.0, 21.0, 20.0, 19.0, 14.0 ]
}

[sub_resource type="Animation" id=11]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 27.0 ]
}

[sub_resource type="Animation" id=12]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 24.0, 23.0 ]
}

[sub_resource type="Animation" id=13]
length = 0.6
step = 0.05
tracks/0/type = "method"
tracks/0/path = NodePath("flap_action")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "weak"
} ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("state_machine/glide_flap")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "clear_buffer"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("pivot/Sprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = false
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 27.0, 9.0, 8.0, 7.0, 6.0, 5.0 ]
}

[sub_resource type="Animation" id=14]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 11.0, 10.0 ]
}

[sub_resource type="Animation" id=15]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("pivot/Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = false
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 14.0, 26.0, 25.0, 27.0 ]
}

[sub_resource type="Image" id=61]
data = {
"data": PoolByteArray( 151, 23, 23, 255, 255, 179, 0, 255, 214, 86, 0, 255 ),
"format": "RGBA8",
"height": 1,
"mipmaps": false,
"width": 3
}

[sub_resource type="ImageTexture" id=35]
flags = 0
flags = 0
image = SubResource( 61 )
size = Vector2( 3, 1 )

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/palette_size = 3
shader_param/offset = 0
shader_param/blue_index_offset = 1.0
shader_param/palette = SubResource( 35 )

[sub_resource type="Animation" id=19]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:tint_progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 1, 0, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:tint_under")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=20]
resource_name = "low"
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:tint_progress")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ Color( 1, 0, 0, 1 ), Color( 0, 1, 0.0156863, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:tint_under")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.25 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 0, 0, 1 ) ]
}

[node name="Node2D" type="Node2D"]

[node name="background" type="Sprite" parent="."]
material = SubResource( 26 )
position = Vector2( 478, 270 )
scale = Vector2( 296.5, 224.5 )
texture = ExtResource( 5 )

[node name="palette" parent="background" instance=ExtResource( 4 )]
material = SubResource( 26 )

[node name="faded_background" type="TileMap" parent="."]
material = SubResource( 43 )
mode = 1
tile_set = SubResource( 40 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( -2883520, 1, 3, -2817993, 1, 3, -2752453, 0, 3, -2686930, 1, 3, -2686912, 1, 3, -2621389, 0, 3, -2555856, 0, 3, -2490323, 0, 3, -2424788, 0, 3, -2424761, 1, 3, -2359253, 0, 3, -2293722, 1, 3, -2293718, 0, 3, -2228183, 0, 3, -2228147, 0, 3, -2162648, 0, 3, -2162617, 1, 3, -2162612, 0, 3, -2097115, 0, 3, -2097077, 0, 3, -2031580, 0, 3, -2031579, 0, 3, -2031542, 0, 3, -1966045, 0, 3, -1966044, 0, 3, -1966007, 0, 3, -1900512, 1, 3, -1900510, 0, 3, -1900509, 0, 3, -1900472, 0, 3, -1834975, 0, 3, -1834974, 0, 3, -1834937, 0, 3, -1769440, 0, 3, -1769402, 0, 3, -1703868, 1, 3, -1638370, 1, 3, -1572799, 1, 3, -1507265, 1, 3, -1441725, 0, 3, -1376190, 0, 3, -1310693, 1, 3, -1179627, 1, 3, -1179625, 0, 3, -1179586, 1, 3, -1179585, 1, 3, -1179583, 0, 3, -1114090, 0, 3, -1114069, 1, 3, -1114051, 1, 3, -1114050, 1, 3, -1114048, 0, 3, -1048555, 0, 3, -1048531, 1, 65538, -1048516, 1, 3, -1048515, 1, 3, -1048513, 0, 3, -983020, 0, 3, -982995, 1, 131073, -982981, 1, 3, -982980, 1, 3, -982978, 0, 3, -917485, 0, 3, -917465, 0, 3, -917460, 1, 0, -917459, 1, 131073, -917446, 1, 3, -917445, 1, 3, -917443, 0, 3, -851950, 0, 3, -851949, 0, 3, -851924, 1, 0, -851923, 1, 131073, -851910, 1, 3, -851908, 0, 3, -786388, 1, 0, -786387, 1, 131073, -786373, 0, 3, -720851, 1, 131073, -720848, 0, 0, -720847, 1, 262149, -720838, 0, 3, -655315, 1, 131073, -655311, 1, 262145, -655310, 1, 262149, -655309, 0, 0, -589779, 1, 196608, -589774, 1, 262145, -589773, 1, 262149, -589772, 0, 0, -524237, 1, 262145, -524236, 1, 262149, -458700, 1, 262145, -458699, 1, 262149, -393163, 1, 262145, -393162, 1, 262149, -327666, 1, 3, -327626, 1, 262145, -327625, 1, 262149, -262100, 1, 3, -262089, 1, 262145, -262088, 1, 262149, -196552, 1, 262145, -196551, 1, 262149, -131015, 1, 262145, -131014, 1, 262149, -65478, 1, 262145, -65477, 1, 262149, 59, 1, 262145, 60, 1, 262149, 65553, 1, 3, 65576, 1, 3, 65596, 1, 262145, 65597, 1, 262149, 65598, 0, 3, 131115, 0, 3, 131133, 1, 262145, 196645, 1, 3, 196650, 0, 3, 196668, 0, 3, 262185, 0, 3, 262203, 0, 3, 327720, 0, 3, 327738, 0, 3, 393237, 1, 3, 393255, 0, 3, 393273, 0, 3, 458790, 0, 3, 458808, 0, 3, 524343, 0, 3, 589878, 0, 3, 655413, 0, 3, 720948, 0, 3, 786483, 0, 3, 852018, 0, 3, 917553, 0, 3, 983088, 0, 3, 1048623, 0, 3, 1114158, 0, 3, 1179693, 0, 3, 1245228, 0, 3, 1310756, 1, 3, 1310761, 0, 3, 1310763, 0, 3, 1376294, 0, 3 )

[node name="palette" parent="faded_background" instance=ExtResource( 4 )]
material = SubResource( 43 )

[node name="mid_background" type="TileMap" parent="."]
material = SubResource( 52 )
mode = 1
tile_set = SubResource( 40 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( -1179585, 0, 3, -1179584, 1, 3, -1114050, 0, 3, -1114049, 1, 3, -1048515, 0, 3, -1048514, 1, 3, -982980, 0, 3, -982979, 1, 3, -917456, 0, 3, -917455, 0, 3, -917454, 0, 3, -917445, 0, 3, -917444, 1, 3, -851921, 0, 3, -851920, 0, 3, -851919, 0, 3, -851918, 0, 3, -851910, 0, 3, -851909, 1, 3, -786386, 0, 3, -786385, 0, 3, -786384, 0, 3, -786383, 0, 3, -786382, 0, 3, -786374, 1, 3, -720850, 0, 3, -720849, 0, 3, -720848, 0, 3, -655314, 0, 3, -655313, 0, 3, -655312, 0, 3, -589777, 0, 3, -589776, 0, 3, -524238, 1, 65541, -524235, 1, 131072, -327627, 1, 65541, 61, 1, 3, 62, 1, 3, 65597, 1, 3, 131132, 1, 3, 196667, 1, 3 )

[node name="palette" parent="mid_background" instance=ExtResource( 4 )]
material = SubResource( 52 )

[node name="closest_background" type="TileMap" parent="."]
material = SubResource( 55 )
mode = 1
tile_set = SubResource( 40 )
cell_size = Vector2( 16, 16 )
format = 1
tile_data = PoolIntArray( -1179583, 0, 3, -1114048, 0, 3, -1048513, 0, 3, -982978, 0, 3, -917455, 0, 3, -917454, 0, 3, -917443, 0, 3, -917442, 0, 3, -851922, 0, 0, -851918, 0, 3, -851908, 0, 3, -851907, 0, 3, -786386, 0, 0, -786382, 0, 3, -786373, 0, 3, -786372, 0, 3, -720850, 0, 0, -720846, 0, 0, -720845, 0, 0, -720844, 0, 0, -720843, 0, 0, -720838, 0, 3, -720837, 0, 3, -655314, 0, 0, -589778, 0, 0, -458693, 0, 327685, -393157, 0, 327685, -327621, 0, 327685, -262085, 0, 327685, 65598, 0, 3, 131133, 0, 3, 196668, 0, 3, 262203, 0, 3, 327738, 0, 3, 393273, 0, 3, 458808, 0, 3, 524343, 0, 3, 589878, 0, 3, 655413, 0, 3, 720948, 0, 3, 786483, 0, 3, 852018, 0, 3, 917553, 0, 3, 983088, 0, 3, 1048623, 0, 3, 1114158, 0, 3, 1179693, 0, 3, 1245228, 0, 3 )

[node name="palette" parent="closest_background" instance=ExtResource( 4 )]
material = SubResource( 55 )

[node name="TileMap" parent="." groups=["map"] instance=ExtResource( 3 )]
material = SubResource( 29 )
tile_data = PoolIntArray( -1, 8, 8, -65536, 8, 10, -65535, 8, 10, -65534, 8, 10, -65533, 8, 10, -65532, 8, 10, -65531, 8, 10, -65530, 8, 10, -65529, 8, 10, -65528, 8, 10, -65527, 8, 10, -65526, 8, 10, -65525, 8, 10, -65524, 8, 10, -65523, 8, 10, -65522, 8, 10, -65521, 8, 10, -65520, 8, 10, -65519, 8, 10, -65518, 8, 10, -65517, 8, 10, -65516, 8, 10, -65515, 8, 10, -65514, 8, 10, -65513, 8, 10, -65512, 8, 10, -65511, 8, 10, -65510, 8, 10, -65509, 8, 10, -65508, 8, 10, -65507, 8, 10, -65506, 8, 10, -65505, 8, 10, -65504, 8, 10, -65503, 8, 10, -65502, 8, 10, -65501, 8, 10, -65500, 8, 10, -65499, 8, 10, -65498, 8, 10, -65497, 8, 10, -65496, 8, 10, -65495, 8, 10, -65494, 8, 10, -65493, 8, 10, -65492, 8, 10, -65491, 8, 10, -65490, 8, 10, -65489, 8, 10, -65488, 8, 10, -65487, 8, 10, -65486, 8, 10, -65485, 8, 10, -65484, 8, 10, -65483, 8, 10, -65482, 8, 10, -65481, 8, 10, -65480, 8, 10, -65479, 8, 10, -65478, 8, 10, -65477, 8, 10, -65476, 8, 11, 65535, 8, 65544, 0, 8, 131081, 1, 8, 131081, 2, 8, 131081, 3, 8, 131081, 4, 8, 131081, 5, 8, 131081, 6, 8, 131081, 7, 8, 131081, 8, 8, 131081, 9, 8, 131081, 10, 8, 131081, 11, 8, 131081, 12, 8, 131081, 13, 8, 131081, 14, 8, 131081, 15, 8, 131078, 16, 8, 196617, 17, 8, 196617, 18, 8, 196617, 19, 8, 196617, 20, 8, 196617, 21, 8, 196617, 22, 8, 131077, 23, 8, 131081, 24, 8, 131081, 25, 8, 131081, 26, 8, 131081, 27, 8, 131081, 28, 8, 131081, 29, 8, 131078, 30, 8, 196617, 31, 8, 196617, 32, 8, 196617, 33, 8, 196617, 34, 8, 196617, 35, 8, 196617, 36, 8, 196617, 37, 8, 196617, 38, 8, 196617, 39, 8, 196617, 40, 8, 131077, 41, 8, 131081, 42, 8, 131081, 43, 8, 131081, 44, 8, 131081, 45, 8, 131081, 46, 8, 131081, 47, 8, 131081, 48, 8, 131081, 49, 8, 131081, 50, 8, 131081, 51, 8, 131081, 52, 8, 131081, 53, 8, 131081, 54, 8, 131081, 55, 8, 131081, 56, 8, 131081, 57, 8, 131081, 58, 8, 131081, 59, 8, 131081, 60, 8, 131083, 131071, 8, 65544, 65536, 8, 131081, 65537, 8, 131081, 65538, 8, 131081, 65539, 8, 131081, 65540, 8, 131081, 65541, 8, 131081, 65542, 8, 131081, 65543, 8, 131081, 65544, 8, 131081, 65545, 8, 131081, 65546, 8, 131081, 65547, 8, 131078, 65548, 8, 196617, 65549, 8, 196617, 65550, 8, 196617, 65551, 8, 196619, 65558, 8, 196616, 65559, 8, 131077, 65560, 8, 131078, 65561, 8, 196617, 65562, 8, 196617, 65563, 8, 196617, 65564, 8, 196617, 65565, 8, 196619, 65576, 8, 196616, 65577, 8, 196617, 65578, 8, 196617, 65579, 8, 196617, 65580, 8, 196617, 65581, 8, 131077, 65582, 8, 131081, 65583, 8, 131081, 65584, 8, 131081, 65585, 8, 131081, 65586, 8, 131081, 65587, 8, 131081, 65588, 8, 131081, 65589, 8, 131081, 65590, 8, 131081, 65591, 8, 131081, 65592, 8, 131081, 65593, 8, 131081, 65594, 8, 131081, 65595, 8, 131081, 65596, 8, 131083, 196607, 8, 65544, 131072, 8, 131081, 131073, 8, 131081, 131074, 8, 131081, 131075, 8, 131081, 131076, 8, 131081, 131077, 8, 131081, 131078, 8, 131081, 131079, 8, 131078, 131080, 8, 196617, 131081, 8, 196617, 131082, 8, 196617, 131083, 8, 196619, 131095, 8, 196616, 131096, 8, 196619, 131117, 8, 196616, 131118, 8, 196617, 131119, 8, 131077, 131120, 8, 131081, 131121, 8, 131081, 131122, 8, 131081, 131123, 8, 131081, 131124, 8, 131081, 131125, 8, 131081, 131126, 8, 131081, 131127, 8, 131081, 131128, 8, 131081, 131129, 8, 131081, 131130, 8, 131081, 131131, 8, 131081, 131132, 8, 131083, 262143, 8, 65544, 196608, 8, 131081, 196609, 8, 131081, 196610, 8, 131081, 196611, 8, 131081, 196612, 8, 131081, 196613, 8, 131081, 196614, 8, 131081, 196615, 8, 131083, 196622, 8, 8, 196623, 8, 10, 196624, 8, 10, 196625, 8, 10, 196626, 8, 10, 196627, 8, 10, 196628, 8, 10, 196629, 8, 11, 196636, 8, 8, 196637, 8, 10, 196638, 8, 10, 196639, 8, 10, 196640, 8, 10, 196641, 8, 10, 196642, 8, 10, 196643, 8, 11, 196655, 8, 196616, 196656, 8, 196617, 196657, 8, 131077, 196658, 8, 131081, 196659, 8, 131081, 196660, 8, 131081, 196661, 8, 131081, 196662, 8, 131081, 196663, 8, 131081, 196664, 8, 131081, 196665, 8, 131081, 196666, 8, 131081, 196667, 8, 131081, 196668, 8, 131083, 327679, 8, 65544, 262144, 8, 131081, 262145, 8, 131081, 262146, 8, 131081, 262147, 8, 131081, 262148, 8, 131081, 262149, 8, 131081, 262150, 8, 131081, 262151, 8, 131083, 262157, 8, 8, 262158, 8, 65541, 262159, 8, 131081, 262160, 8, 131081, 262161, 8, 131081, 262162, 8, 131081, 262163, 8, 131081, 262164, 8, 131081, 262165, 8, 65542, 262166, 8, 11, 262169, 8, 196609, 262170, 8, 5, 262171, 8, 10, 262172, 8, 65541, 262173, 8, 131081, 262174, 8, 131081, 262175, 8, 131081, 262176, 8, 131081, 262177, 8, 131081, 262178, 8, 131081, 262179, 8, 65542, 262180, 8, 10, 262181, 8, 10, 262182, 8, 10, 262183, 8, 10, 262184, 8, 10, 262185, 8, 10, 262186, 8, 11, 262193, 8, 196616, 262194, 8, 196617, 262195, 8, 131077, 262196, 8, 131081, 262197, 8, 131081, 262198, 8, 131081, 262199, 8, 131081, 262200, 8, 131081, 262201, 8, 131081, 262202, 8, 131081, 262203, 8, 131081, 262204, 8, 131083, 393215, 8, 65544, 327680, 8, 131081, 327681, 8, 131081, 327682, 8, 131081, 327683, 8, 131081, 327684, 8, 131081, 327685, 8, 131081, 327686, 8, 131078, 327687, 8, 196619, 327693, 8, 65544, 327694, 8, 131081, 327695, 8, 131081, 327696, 8, 131081, 327697, 8, 131081, 327698, 8, 131081, 327699, 8, 131081, 327700, 8, 131081, 327701, 8, 131081, 327702, 8, 65542, 327703, 8, 11, 327706, 8, 65544, 327707, 8, 131081, 327708, 8, 131078, 327709, 8, 196617, 327710, 8, 196617, 327711, 8, 196617, 327712, 8, 131077, 327713, 8, 131081, 327714, 8, 131081, 327715, 8, 131081, 327716, 8, 131081, 327717, 8, 131081, 327718, 8, 131081, 327719, 8, 131081, 327720, 8, 131081, 327721, 8, 131081, 327722, 8, 65542, 327723, 8, 10, 327724, 8, 11, 327731, 8, 196616, 327732, 8, 131077, 327733, 8, 131081, 327734, 8, 131081, 327735, 8, 131081, 327736, 8, 131081, 327737, 8, 131081, 327738, 8, 131081, 327739, 8, 131081, 327740, 8, 131083, 458751, 8, 65544, 393216, 8, 131081, 393217, 8, 131081, 393218, 8, 131081, 393219, 8, 131081, 393220, 8, 131081, 393221, 8, 131081, 393222, 8, 131083, 393227, 8, 8, 393228, 8, 10, 393229, 8, 65541, 393230, 8, 131081, 393231, 8, 131081, 393232, 8, 131081, 393233, 8, 131081, 393234, 8, 131081, 393235, 8, 131081, 393236, 8, 131081, 393237, 8, 131081, 393238, 8, 131081, 393239, 8, 65542, 393240, 8, 11, 393242, 8, 65544, 393243, 8, 131078, 393244, 8, 196619, 393248, 8, 196616, 393249, 8, 131077, 393250, 8, 131081, 393251, 8, 131081, 393252, 8, 131081, 393253, 8, 131081, 393254, 8, 131081, 393255, 8, 131081, 393256, 8, 131081, 393257, 8, 131081, 393258, 8, 131081, 393259, 8, 131081, 393260, 8, 65542, 393261, 8, 10, 393262, 8, 11, 393268, 8, 196616, 393269, 8, 131077, 393270, 8, 131081, 393271, 8, 131081, 393272, 8, 131081, 393273, 8, 131081, 393274, 8, 131081, 393275, 8, 131081, 393276, 8, 131083, 524287, 8, 65544, 458752, 8, 131081, 458753, 8, 131081, 458754, 8, 131081, 458755, 8, 131081, 458756, 8, 131081, 458757, 8, 131081, 458758, 8, 131083, 458763, 8, 65544, 458764, 8, 131081, 458765, 8, 131081, 458766, 8, 131081, 458767, 8, 131081, 458768, 8, 131081, 458769, 8, 131081, 458770, 8, 131081, 458771, 8, 131081, 458772, 8, 131081, 458773, 8, 131081, 458774, 8, 131081, 458775, 8, 131081, 458776, 8, 131083, 458778, 8, 65544, 458779, 8, 131083, 458785, 8, 65544, 458786, 8, 131081, 458787, 8, 131081, 458788, 8, 131081, 458789, 8, 131081, 458790, 8, 131081, 458791, 8, 131081, 458792, 8, 131081, 458793, 8, 131081, 458794, 8, 131081, 458795, 8, 131081, 458796, 8, 131081, 458797, 8, 131078, 458798, 8, 196619, 458799, 0, 65536, 458800, 8, 0, 458805, 8, 196616, 458806, 8, 131077, 458807, 8, 131081, 458808, 8, 131081, 458809, 8, 131081, 458810, 8, 131081, 458811, 8, 131081, 458812, 8, 131083, 589823, 8, 65544, 524288, 8, 131081, 524289, 8, 131081, 524290, 8, 131081, 524291, 8, 131081, 524292, 8, 131081, 524293, 8, 131081, 524294, 8, 131083, 524298, 8, 8, 524299, 8, 65541, 524300, 8, 131081, 524301, 8, 131081, 524302, 8, 131081, 524303, 8, 131081, 524304, 8, 131081, 524305, 8, 131081, 524306, 8, 131081, 524307, 8, 131081, 524308, 8, 131081, 524309, 8, 131081, 524310, 8, 131081, 524311, 8, 131081, 524312, 8, 131083, 524314, 8, 65544, 524315, 8, 131083, 524321, 8, 65544, 524322, 8, 131081, 524323, 8, 131081, 524324, 8, 131081, 524325, 8, 131081, 524326, 8, 131081, 524327, 8, 131081, 524328, 8, 131081, 524329, 8, 131081, 524330, 8, 131081, 524331, 8, 131081, 524332, 8, 131081, 524333, 8, 131083, 524334, 0, 65537, 524335, 0, 196611, 524336, 8, 65540, 524337, 8, 11, 524342, 8, 65544, 524343, 8, 131081, 524344, 8, 131081, 524345, 8, 131081, 524346, 8, 131081, 524347, 8, 131081, 524348, 8, 131083, 655359, 8, 65544, 589824, 8, 131081, 589825, 8, 131081, 589826, 8, 131081, 589827, 8, 131081, 589828, 8, 131081, 589829, 8, 131081, 589830, 8, 131083, 589834, 8, 65544, 589835, 8, 131081, 589836, 8, 131081, 589837, 8, 131081, 589838, 8, 131081, 589839, 8, 131081, 589840, 8, 131081, 589841, 8, 131081, 589842, 8, 131081, 589843, 8, 131081, 589844, 8, 131081, 589845, 8, 131081, 589846, 8, 131081, 589847, 8, 131081, 589848, 8, 131083, 589850, 8, 65544, 589851, 8, 131083, 589857, 8, 196616, 589858, 8, 196617, 589859, 8, 196617, 589860, 8, 196617, 589861, 8, 131077, 589862, 8, 131081, 589863, 8, 131081, 589864, 8, 131081, 589865, 8, 131081, 589866, 8, 131081, 589867, 8, 131078, 589868, 8, 196617, 589869, 8, 196619, 589870, 0, 131072, 589871, 8, 8, 589872, 8, 65541, 589873, 8, 65542, 589874, 8, 6, 589875, 8, 196611, 589878, 8, 196616, 589879, 8, 131077, 589880, 8, 131081, 589881, 8, 131081, 589882, 8, 131081, 589883, 8, 131081, 589884, 8, 131083, 720895, 8, 65544, 655360, 8, 131081, 655361, 8, 131081, 655362, 8, 131081, 655363, 8, 131081, 655364, 8, 131081, 655365, 8, 131081, 655366, 8, 131083, 655370, 8, 65544, 655371, 8, 131081, 655372, 8, 131081, 655373, 8, 131081, 655374, 8, 131081, 655375, 8, 131081, 655376, 8, 131081, 655377, 8, 131081, 655378, 8, 131081, 655379, 8, 131081, 655380, 8, 131081, 655381, 8, 131081, 655382, 8, 131081, 655383, 8, 131081, 655384, 8, 131083, 655386, 8, 196616, 655387, 8, 196619, 655388, 0, 65537, 655389, 0, 2, 655390, 0, 3, 655392, 0, 65537, 655393, 0, 2, 655394, 0, 2, 655395, 0, 2, 655396, 0, 65539, 655397, 8, 196616, 655398, 8, 196617, 655399, 8, 196617, 655400, 8, 131077, 655401, 8, 131081, 655402, 8, 131078, 655403, 8, 196619, 655404, 0, 65537, 655405, 0, 2, 655406, 0, 196611, 655407, 8, 65544, 655408, 8, 131081, 655409, 8, 131081, 655410, 8, 131083, 655415, 8, 196616, 655416, 8, 131077, 655417, 8, 131081, 655418, 8, 131081, 655419, 8, 131081, 655420, 8, 131083, 786431, 8, 65544, 720896, 8, 131081, 720897, 8, 131081, 720898, 8, 131081, 720899, 8, 131081, 720900, 8, 131081, 720901, 8, 131078, 720902, 8, 196619, 720906, 8, 65544, 720907, 8, 131081, 720908, 8, 131081, 720909, 8, 131081, 720910, 8, 131078, 720911, 8, 196617, 720912, 8, 196617, 720913, 8, 196617, 720914, 8, 196617, 720915, 8, 196617, 720916, 8, 196617, 720917, 8, 196617, 720918, 8, 196617, 720919, 8, 196617, 720920, 8, 196614, 720921, 8, 196611, 720924, 0, 196608, 720927, 0, 1, 720928, 0, 196611, 720929, 8, 8, 720930, 8, 10, 720931, 8, 11, 720932, 0, 196609, 720933, 0, 2, 720934, 0, 2, 720935, 0, 65539, 720936, 8, 196616, 720937, 8, 196618, 720938, 8, 196619, 720939, 0, 65537, 720940, 0, 196611, 720941, 8, 8, 720942, 8, 10, 720943, 8, 65541, 720944, 8, 131081, 720945, 8, 131081, 720946, 8, 131083, 720952, 8, 65544, 720953, 8, 131081, 720954, 8, 131081, 720955, 8, 131081, 720956, 8, 131083, 851967, 8, 65544, 786432, 8, 131078, 786433, 8, 196617, 786434, 8, 131077, 786435, 8, 131081, 786436, 8, 131081, 786437, 8, 131083, 786441, 8, 8, 786442, 8, 65541, 786443, 8, 131081, 786444, 8, 131081, 786445, 8, 131078, 786446, 8, 196619, 786447, 0, 65537, 786448, 0, 2, 786449, 0, 2, 786450, 0, 2, 786451, 0, 2, 786452, 0, 2, 786453, 0, 2, 786454, 0, 2, 786455, 0, 3, 786465, 8, 65544, 786466, 8, 131081, 786467, 8, 65542, 786468, 8, 10, 786469, 8, 10, 786470, 8, 11, 786471, 0, 196609, 786472, 0, 65539, 786473, 8, 131072, 786474, 0, 65537, 786475, 0, 196611, 786476, 8, 8, 786477, 8, 65541, 786478, 8, 131081, 786479, 8, 131081, 786480, 8, 131081, 786481, 8, 131081, 786482, 8, 131083, 786488, 8, 65544, 786489, 8, 131081, 786490, 8, 131081, 786491, 8, 131081, 786492, 8, 131083, 917503, 8, 65544, 851968, 8, 131083, 851969, 0, 65536, 851970, 8, 196616, 851971, 8, 131077, 851972, 8, 131078, 851973, 8, 196619, 851977, 8, 65544, 851978, 8, 131081, 851979, 8, 131081, 851980, 8, 131078, 851981, 8, 196619, 851982, 0, 65537, 851983, 0, 196611, 851984, 8, 8, 851985, 8, 10, 851986, 8, 10, 851987, 8, 10, 851988, 8, 10, 851989, 8, 10, 851990, 8, 11, 851993, 8, 8, 851994, 8, 10, 851995, 8, 11, 852001, 8, 65544, 852002, 8, 131081, 852003, 8, 131081, 852004, 8, 131081, 852005, 8, 131081, 852006, 8, 65542, 852007, 8, 11, 852008, 0, 131073, 852009, 0, 2, 852010, 0, 131075, 852011, 8, 196609, 852012, 8, 131080, 852013, 8, 131081, 852014, 8, 131081, 852015, 8, 131081, 852016, 8, 131081, 852017, 8, 131081, 852018, 8, 131083, 852023, 8, 8, 852024, 8, 65541, 852025, 8, 131081, 852026, 8, 131081, 852027, 8, 131081, 852028, 8, 131083, 983039, 8, 65544, 917504, 8, 131083, 917505, 0, 131073, 917506, 0, 65539, 917507, 8, 131076, 917508, 8, 196619, 917509, 0, 65536, 917512, 8, 8, 917513, 8, 65541, 917514, 8, 131081, 917515, 8, 131081, 917516, 8, 131083, 917517, 0, 65537, 917518, 0, 196611, 917519, 8, 8, 917520, 8, 65541, 917521, 8, 131081, 917522, 8, 131081, 917523, 8, 131081, 917524, 8, 131081, 917525, 8, 131078, 917526, 8, 196619, 917528, 8, 8, 917529, 8, 65541, 917530, 8, 131078, 917531, 8, 196619, 917537, 8, 65544, 917538, 8, 131081, 917539, 8, 131081, 917540, 8, 131081, 917541, 8, 131081, 917542, 8, 131081, 917543, 8, 131083, 917544, 0, 196608, 917545, 8, 0, 917546, 0, 196609, 917547, 0, 65539, 917548, 8, 196616, 917549, 8, 131077, 917550, 8, 131081, 917551, 8, 131081, 917552, 8, 131081, 917553, 8, 131081, 917554, 8, 131083, 917559, 8, 65544, 917560, 8, 131081, 917561, 8, 131081, 917562, 8, 131081, 917563, 8, 131081, 917564, 8, 131083, 1048575, 8, 196616, 983040, 8, 131079, 983041, 0, 131073, 983042, 0, 131075, 983043, 8, 131072, 983044, 0, 65537, 983045, 0, 131075, 983048, 8, 65544, 983049, 8, 131081, 983050, 8, 131081, 983051, 8, 131081, 983052, 8, 131083, 983053, 0, 131072, 983054, 8, 8, 983055, 8, 65541, 983056, 8, 131081, 983057, 8, 131081, 983058, 8, 131081, 983059, 8, 131081, 983060, 8, 131081, 983061, 8, 131083, 983063, 8, 8, 983064, 8, 65545, 983065, 8, 196617, 983066, 8, 196619, 983073, 8, 65544, 983074, 8, 131081, 983075, 8, 131081, 983076, 8, 131081, 983077, 8, 131081, 983078, 8, 131081, 983079, 8, 65542, 983080, 8, 10, 983081, 8, 9, 983082, 8, 11, 983083, 0, 196609, 983084, 0, 65539, 983085, 8, 65544, 983086, 8, 131081, 983087, 8, 131081, 983088, 8, 131081, 983089, 8, 131081, 983090, 8, 131083, 983095, 8, 65544, 983096, 8, 131081, 983097, 8, 131081, 983098, 8, 131081, 983099, 8, 131081, 983100, 8, 131083, 1114111, 0, 65536, 1048576, 8, 131072, 1048577, 0, 131073, 1048578, 0, 131074, 1048579, 0, 65538, 1048580, 0, 131074, 1048581, 0, 131075, 1048584, 8, 65544, 1048585, 8, 131081, 1048586, 8, 131081, 1048587, 8, 131081, 1048588, 8, 131083, 1048589, 0, 131072, 1048590, 8, 65544, 1048591, 8, 131081, 1048592, 8, 131081, 1048593, 8, 131081, 1048594, 8, 131081, 1048595, 8, 131081, 1048596, 8, 131078, 1048597, 8, 196619, 1048599, 8, 196616, 1048600, 8, 196619, 1048609, 8, 65544, 1048610, 8, 131081, 1048611, 8, 131081, 1048612, 8, 131081, 1048613, 8, 131081, 1048614, 8, 131081, 1048615, 8, 131081, 1048616, 8, 131081, 1048617, 8, 131081, 1048618, 8, 65542, 1048619, 8, 11, 1048620, 0, 131072, 1048621, 8, 65544, 1048622, 8, 131081, 1048623, 8, 131081, 1048624, 8, 131081, 1048625, 8, 131078, 1048626, 8, 196619, 1048631, 8, 65544, 1048632, 8, 131081, 1048633, 8, 131081, 1048634, 8, 131081, 1048635, 8, 131081, 1048636, 8, 131083, 1179646, 0, 65537, 1179647, 0, 131074, 1114112, 0, 65538, 1114113, 0, 131074, 1114114, 0, 131074, 1114115, 0, 131074, 1114116, 0, 131074, 1114117, 0, 131075, 1114119, 8, 196609, 1114120, 8, 131080, 1114121, 8, 131081, 1114122, 8, 131081, 1114123, 8, 131081, 1114124, 8, 131083, 1114125, 0, 131072, 1114126, 8, 196616, 1114127, 8, 196617, 1114128, 8, 196617, 1114129, 8, 196617, 1114130, 8, 196617, 1114131, 8, 196617, 1114132, 8, 196619, 1114145, 8, 65544, 1114146, 8, 131081, 1114147, 8, 131081, 1114148, 8, 131081, 1114149, 8, 131081, 1114150, 8, 131081, 1114151, 8, 131081, 1114152, 8, 131081, 1114153, 8, 131081, 1114154, 8, 131081, 1114155, 8, 131083, 1114156, 0, 131072, 1114157, 8, 196616, 1114158, 8, 131077, 1114159, 8, 131081, 1114160, 8, 131081, 1114161, 8, 131083, 1114167, 8, 196616, 1114168, 8, 131077, 1114169, 8, 131081, 1114170, 8, 131081, 1114171, 8, 131081, 1114172, 8, 131083, 1245181, 0, 65537, 1245182, 0, 131074, 1245183, 0, 131074, 1179648, 0, 131074, 1179649, 0, 131074, 1179650, 0, 131074, 1179651, 0, 131074, 1179652, 0, 131074, 1179653, 0, 131075, 1179656, 8, 65544, 1179657, 8, 131081, 1179658, 8, 131081, 1179659, 8, 131081, 1179660, 8, 131083, 1179661, 0, 196609, 1179662, 0, 2, 1179663, 0, 2, 1179664, 0, 2, 1179665, 0, 2, 1179666, 0, 2, 1179667, 0, 2, 1179668, 0, 3, 1179670, 0, 0, 1179681, 8, 65544, 1179682, 8, 131081, 1179683, 8, 131081, 1179684, 8, 131081, 1179685, 8, 131081, 1179686, 8, 131081, 1179687, 8, 131081, 1179688, 8, 131081, 1179689, 8, 131081, 1179690, 8, 131081, 1179691, 8, 131083, 1179692, 0, 196609, 1179693, 0, 65539, 1179694, 8, 65544, 1179695, 8, 131081, 1179696, 8, 131081, 1179697, 8, 131083, 1179704, 8, 65544, 1179705, 8, 131081, 1179706, 8, 131081, 1179707, 8, 131081, 1179708, 8, 131083, 1310717, 0, 196609, 1310718, 0, 196610, 1310719, 0, 196610, 1245184, 0, 196610, 1245185, 0, 131074, 1245186, 0, 131074, 1245187, 0, 196610, 1245188, 0, 131074, 1245189, 0, 131075, 1245192, 8, 65544, 1245193, 8, 131081, 1245194, 8, 131081, 1245195, 8, 131081, 1245196, 8, 65542, 1245197, 8, 10, 1245198, 8, 6, 1245199, 8, 196611, 1245210, 0, 65536, 1245217, 8, 196616, 1245218, 8, 196617, 1245219, 8, 196617, 1245220, 8, 196617, 1245221, 8, 196617, 1245222, 8, 196617, 1245223, 8, 196617, 1245224, 8, 196617, 1245225, 8, 196617, 1245226, 8, 196617, 1245227, 8, 196614, 1245228, 8, 196611, 1245229, 0, 196608, 1245230, 8, 196616, 1245231, 8, 196617, 1245232, 8, 131077, 1245233, 8, 131083, 1245240, 8, 65544, 1245241, 8, 131081, 1245242, 8, 131081, 1245243, 8, 131081, 1245244, 8, 131083, 1376255, 8, 8, 1310720, 8, 11, 1310721, 0, 196609, 1310722, 0, 196611, 1310723, 8, 0, 1310724, 0, 131073, 1310725, 0, 131075, 1310728, 8, 65544, 1310729, 8, 131081, 1310730, 8, 131081, 1310731, 8, 131081, 1310732, 8, 131081, 1310733, 8, 131081, 1310734, 8, 131083, 1310746, 0, 131072, 1310768, 8, 196616, 1310769, 8, 196619, 1310775, 8, 8, 1310776, 8, 65541, 1310777, 8, 131081, 1310778, 8, 131081, 1310779, 8, 131081, 1310780, 8, 131083, 1441791, 8, 65544, 1376256, 8, 65542, 1376257, 8, 10, 1376258, 8, 10, 1376259, 8, 65543, 1376260, 0, 196609, 1376261, 0, 131075, 1376263, 8, 8, 1376264, 8, 65541, 1376265, 8, 131081, 1376266, 8, 131081, 1376267, 8, 131081, 1376268, 8, 131081, 1376269, 8, 131081, 1376270, 8, 131083, 1376282, 0, 131072, 1376311, 8, 65544, 1376312, 8, 131081, 1376313, 8, 131081, 1376314, 8, 131081, 1376315, 8, 131081, 1376316, 8, 131083, 1507327, 8, 65544, 1441792, 8, 131081, 1441793, 8, 131081, 1441794, 8, 131081, 1441795, 8, 65542, 1441796, 8, 11, 1441797, 0, 196608, 1441799, 8, 65544, 1441800, 8, 131081, 1441801, 8, 131081, 1441802, 8, 131081, 1441803, 8, 131081, 1441804, 8, 131081, 1441805, 8, 131081, 1441806, 8, 131083, 1441816, 0, 65537, 1441817, 0, 2, 1441818, 0, 196611, 1441825, 8, 0, 1441838, 0, 65536, 1441839, 8, 8, 1441840, 8, 10, 1441841, 8, 10, 1441842, 8, 10, 1441843, 8, 10, 1441844, 8, 10, 1441845, 8, 10, 1441846, 8, 10, 1441847, 8, 65541, 1441848, 8, 131081, 1441849, 8, 131081, 1441850, 8, 131081, 1441851, 8, 131081, 1441852, 8, 131083, 1572863, 8, 65544, 1507328, 8, 131081, 1507329, 8, 131081, 1507330, 8, 131081, 1507331, 8, 131081, 1507332, 8, 65542, 1507333, 8, 11, 1507335, 8, 65544, 1507336, 8, 131081, 1507337, 8, 131081, 1507338, 8, 131081, 1507339, 8, 131081, 1507340, 8, 131081, 1507341, 8, 131081, 1507342, 8, 65542, 1507343, 8, 10, 1507344, 8, 10, 1507345, 8, 10, 1507346, 8, 6, 1507347, 8, 196610, 1507348, 8, 196610, 1507349, 8, 196611, 1507351, 0, 1, 1507352, 0, 196611, 1507353, 8, 8, 1507354, 8, 10, 1507355, 8, 11, 1507361, 8, 65536, 1507370, 8, 8, 1507371, 8, 10, 1507372, 8, 10, 1507373, 8, 11, 1507374, 0, 131072, 1507375, 8, 65544, 1507376, 8, 131081, 1507377, 8, 131081, 1507378, 8, 131081, 1507379, 8, 131081, 1507380, 8, 131081, 1507381, 8, 131081, 1507382, 8, 131081, 1507383, 8, 131081, 1507384, 8, 131081, 1507385, 8, 131081, 1507386, 8, 131081, 1507387, 8, 131081, 1507388, 8, 131083, 1638399, 8, 65544, 1572864, 8, 131081, 1572865, 8, 131081, 1572866, 8, 131081, 1572867, 8, 131081, 1572868, 8, 131081, 1572869, 8, 131083, 1572871, 8, 65544, 1572872, 8, 131081, 1572873, 8, 131081, 1572874, 8, 131081, 1572875, 8, 131081, 1572876, 8, 131081, 1572877, 8, 131081, 1572878, 8, 131081, 1572879, 8, 131081, 1572880, 8, 131081, 1572881, 8, 131078, 1572882, 8, 196619, 1572883, 0, 65537, 1572884, 0, 2, 1572885, 0, 3, 1572888, 8, 8, 1572889, 8, 65541, 1572890, 8, 131081, 1572891, 8, 131083, 1572897, 8, 65540, 1572898, 8, 10, 1572899, 8, 10, 1572900, 8, 10, 1572901, 8, 10, 1572902, 8, 10, 1572903, 8, 10, 1572904, 8, 10, 1572905, 8, 10, 1572906, 8, 65541, 1572907, 8, 131081, 1572908, 8, 131078, 1572909, 8, 196619, 1572910, 0, 131072, 1572911, 8, 65544, 1572912, 8, 131081, 1572913, 8, 131081, 1572914, 8, 131081, 1572915, 8, 131081, 1572916, 8, 131081, 1572917, 8, 131081, 1572918, 8, 131081, 1572919, 8, 131081, 1572920, 8, 131081, 1572921, 8, 131081, 1572922, 8, 131081, 1572923, 8, 131081, 1572924, 8, 131083, 1703935, 8, 65544, 1638400, 8, 131081, 1638401, 8, 131081, 1638402, 8, 131081, 1638403, 8, 131081, 1638404, 8, 131081, 1638405, 8, 131083, 1638407, 8, 65544, 1638408, 8, 131081, 1638409, 8, 131081, 1638410, 8, 131081, 1638411, 8, 131081, 1638412, 8, 131081, 1638413, 8, 131081, 1638414, 8, 131081, 1638415, 8, 131081, 1638416, 8, 131078, 1638417, 8, 196619, 1638418, 0, 65537, 1638419, 0, 196611, 1638420, 8, 8, 1638421, 8, 10, 1638422, 8, 10, 1638423, 8, 10, 1638424, 8, 65541, 1638425, 8, 131081, 1638426, 8, 131081, 1638427, 8, 131083, 1638433, 8, 65544, 1638434, 8, 131081, 1638435, 8, 131081, 1638436, 8, 131081, 1638437, 8, 131081, 1638438, 8, 131081, 1638439, 8, 131081, 1638440, 8, 131081, 1638441, 8, 131081, 1638442, 8, 131081, 1638443, 8, 131081, 1638444, 8, 131083, 1638445, 0, 65537, 1638446, 0, 196611, 1638447, 8, 65544, 1638448, 8, 131081, 1638449, 8, 131081, 1638450, 8, 131081, 1638451, 8, 131081, 1638452, 8, 131081, 1638453, 8, 131081, 1638454, 8, 131081, 1638455, 8, 131081, 1638456, 8, 131081, 1638457, 8, 131081, 1638458, 8, 131081, 1638459, 8, 131081, 1638460, 8, 131083, 1769471, 8, 65544, 1703936, 8, 131081, 1703937, 8, 131081, 1703938, 8, 131081, 1703939, 8, 131081, 1703940, 8, 131081, 1703941, 8, 131083, 1703943, 8, 196616, 1703944, 8, 131077, 1703945, 8, 131081, 1703946, 8, 131081, 1703947, 8, 131081, 1703948, 8, 131081, 1703949, 8, 131081, 1703950, 8, 131081, 1703951, 8, 131081, 1703952, 8, 131083, 1703953, 0, 65537, 1703954, 0, 196611, 1703955, 8, 8, 1703956, 8, 65541, 1703957, 8, 131081, 1703958, 8, 131081, 1703959, 8, 131081, 1703960, 8, 131081, 1703961, 8, 131081, 1703962, 8, 131081, 1703963, 8, 65542, 1703964, 8, 11, 1703968, 8, 8, 1703969, 8, 65541, 1703970, 8, 131081, 1703971, 8, 131081, 1703972, 8, 131081, 1703973, 8, 131081, 1703974, 8, 131081, 1703975, 8, 131081, 1703976, 8, 131081, 1703977, 8, 131081, 1703978, 8, 131081, 1703979, 8, 131078, 1703980, 8, 196619, 1703981, 0, 131072, 1703982, 8, 8, 1703983, 8, 65541, 1703984, 8, 131081, 1703985, 8, 131081, 1703986, 8, 131081, 1703987, 8, 131081, 1703988, 8, 131081, 1703989, 8, 131081, 1703990, 8, 131081, 1703991, 8, 131081, 1703992, 8, 131081, 1703993, 8, 131081, 1703994, 8, 131081, 1703995, 8, 131081, 1703996, 8, 131083, 1835007, 8, 65544, 1769472, 8, 131081, 1769473, 8, 131081, 1769474, 8, 131081, 1769475, 8, 131081, 1769476, 8, 131081, 1769477, 8, 131083, 1769480, 8, 196616, 1769481, 8, 196617, 1769482, 8, 131077, 1769483, 8, 131081, 1769484, 8, 131081, 1769485, 8, 131081, 1769486, 8, 131081, 1769487, 8, 131081, 1769488, 8, 131083, 1769489, 0, 131072, 1769490, 8, 8, 1769491, 8, 65541, 1769492, 8, 131081, 1769493, 8, 131081, 1769494, 8, 131081, 1769495, 8, 131081, 1769496, 8, 131081, 1769497, 8, 131081, 1769498, 8, 131081, 1769499, 8, 131081, 1769500, 8, 131083, 1769503, 8, 8, 1769504, 8, 65541, 1769505, 8, 131081, 1769506, 8, 131081, 1769507, 8, 131081, 1769508, 8, 131081, 1769509, 8, 131081, 1769510, 8, 131081, 1769511, 8, 131081, 1769512, 8, 131078, 1769513, 8, 196617, 1769514, 8, 196617, 1769515, 8, 196619, 1769516, 0, 1, 1769517, 0, 196611, 1769518, 8, 65544, 1769519, 8, 131081, 1769520, 8, 131081, 1769521, 8, 131081, 1769522, 8, 131081, 1769523, 8, 131081, 1769524, 8, 131081, 1769525, 8, 131081, 1769526, 8, 131081, 1769527, 8, 131081, 1769528, 8, 131081, 1769529, 8, 131081, 1769530, 8, 131081, 1769531, 8, 131081, 1769532, 8, 131083, 1900543, 8, 65544, 1835008, 8, 131081, 1835009, 8, 131081, 1835010, 8, 131081, 1835011, 8, 131081, 1835012, 8, 131081, 1835013, 8, 65542, 1835014, 8, 11, 1835018, 8, 196616, 1835019, 8, 131077, 1835020, 8, 131081, 1835021, 8, 131081, 1835022, 8, 131081, 1835023, 8, 131081, 1835024, 8, 131083, 1835025, 0, 131072, 1835026, 8, 196616, 1835027, 8, 196617, 1835028, 8, 131077, 1835029, 8, 131081, 1835030, 8, 131081, 1835031, 8, 131081, 1835032, 8, 131081, 1835033, 8, 131081, 1835034, 8, 131078, 1835035, 8, 196617, 1835036, 8, 196619, 1835039, 8, 65544, 1835040, 8, 131081, 1835041, 8, 131081, 1835042, 8, 131081, 1835043, 8, 131081, 1835044, 8, 131081, 1835045, 8, 131081, 1835046, 8, 131078, 1835047, 8, 196617, 1835048, 8, 196619, 1835049, 0, 65537, 1835050, 0, 2, 1835051, 0, 3, 1835052, 8, 8, 1835053, 8, 10, 1835054, 8, 65541, 1835055, 8, 131081, 1835056, 8, 131081, 1835057, 8, 131081, 1835058, 8, 131081, 1835059, 8, 131081, 1835060, 8, 131081, 1835061, 8, 131081, 1835062, 8, 131081, 1835063, 8, 131081, 1835064, 8, 131081, 1835065, 8, 131081, 1835066, 8, 131081, 1835067, 8, 131081, 1835068, 8, 131083, 1966079, 8, 65544, 1900544, 8, 131081, 1900545, 8, 131081, 1900546, 8, 131081, 1900547, 8, 131081, 1900548, 8, 131081, 1900549, 8, 131081, 1900550, 8, 65542, 1900551, 8, 11, 1900555, 8, 196616, 1900556, 8, 196617, 1900557, 8, 196617, 1900558, 8, 196617, 1900559, 8, 196617, 1900560, 8, 196619, 1900561, 0, 196609, 1900562, 0, 2, 1900563, 0, 3, 1900564, 8, 196616, 1900565, 8, 196617, 1900566, 8, 196617, 1900567, 8, 196617, 1900568, 8, 196617, 1900569, 8, 196617, 1900570, 8, 196619, 1900575, 8, 65544, 1900576, 8, 131081, 1900577, 8, 131081, 1900578, 8, 131078, 1900579, 8, 196617, 1900580, 8, 196617, 1900581, 8, 196617, 1900582, 8, 196619, 1900583, 0, 1, 1900584, 0, 2, 1900585, 0, 196611, 1900586, 8, 8, 1900587, 8, 10, 1900588, 8, 65541, 1900589, 8, 131081, 1900590, 8, 131081, 1900591, 8, 131081, 1900592, 8, 131081, 1900593, 8, 131081, 1900594, 8, 131081, 1900595, 8, 131081, 1900596, 8, 131081, 1900597, 8, 131081, 1900598, 8, 131081, 1900599, 8, 131081, 1900600, 8, 131081, 1900601, 8, 131081, 1900602, 8, 131081, 1900603, 8, 131081, 1900604, 8, 131083, 2031615, 8, 65544, 1966080, 8, 131081, 1966081, 8, 131081, 1966082, 8, 131081, 1966083, 8, 131081, 1966084, 8, 131081, 1966085, 8, 131081, 1966086, 8, 131081, 1966087, 8, 65542, 1966088, 8, 10, 1966089, 8, 11, 1966110, 8, 196609, 1966111, 8, 196613, 1966112, 8, 196617, 1966113, 8, 196617, 1966114, 8, 196619, 1966115, 0, 65537, 1966116, 0, 2, 1966117, 0, 2, 1966118, 0, 3, 1966119, 8, 8, 1966120, 8, 10, 1966121, 8, 10, 1966122, 8, 65541, 1966123, 8, 131081, 1966124, 8, 131081, 1966125, 8, 131081, 1966126, 8, 131081, 1966127, 8, 131081, 1966128, 8, 131081, 1966129, 8, 131081, 1966130, 8, 131081, 1966131, 8, 131081, 1966132, 8, 131081, 1966133, 8, 131081, 1966134, 8, 131081, 1966135, 8, 131081, 1966136, 8, 131081, 1966137, 8, 131081, 1966138, 8, 131081, 1966139, 8, 131081, 1966140, 8, 131083, 2097151, 8, 65544, 2031616, 8, 131081, 2031617, 8, 131081, 2031618, 8, 131081, 2031619, 8, 131081, 2031620, 8, 131081, 2031621, 8, 131081, 2031622, 8, 131081, 2031623, 8, 131081, 2031624, 8, 131081, 2031625, 8, 65542, 2031626, 8, 10, 2031627, 8, 11, 2031647, 0, 1, 2031648, 0, 2, 2031649, 0, 2, 2031650, 0, 2, 2031651, 0, 196611, 2031652, 8, 8, 2031653, 8, 10, 2031654, 8, 10, 2031655, 8, 65541, 2031656, 8, 131081, 2031657, 8, 131081, 2031658, 8, 131081, 2031659, 8, 131081, 2031660, 8, 131081, 2031661, 8, 131081, 2031662, 8, 131081, 2031663, 8, 131081, 2031664, 8, 131081, 2031665, 8, 131081, 2031666, 8, 131081, 2031667, 8, 131081, 2031668, 8, 131081, 2031669, 8, 131081, 2031670, 8, 131081, 2031671, 8, 131081, 2031672, 8, 131081, 2031673, 8, 131081, 2031674, 8, 131081, 2031675, 8, 131081, 2031676, 8, 131083, 2162687, 8, 65544, 2097152, 8, 131081, 2097153, 8, 131081, 2097154, 8, 131081, 2097155, 8, 131081, 2097156, 8, 131081, 2097157, 8, 131081, 2097158, 8, 131081, 2097159, 8, 131081, 2097160, 8, 131081, 2097161, 8, 131081, 2097162, 8, 131081, 2097163, 8, 65542, 2097164, 8, 10, 2097165, 8, 10, 2097166, 8, 10, 2097167, 8, 10, 2097168, 8, 10, 2097169, 8, 10, 2097170, 8, 10, 2097171, 8, 10, 2097172, 8, 10, 2097173, 8, 10, 2097174, 8, 10, 2097175, 8, 10, 2097176, 8, 10, 2097177, 8, 10, 2097178, 8, 10, 2097179, 8, 10, 2097180, 8, 10, 2097181, 8, 10, 2097182, 8, 10, 2097183, 8, 10, 2097184, 8, 10, 2097185, 8, 10, 2097186, 8, 10, 2097187, 8, 10, 2097188, 8, 65541, 2097189, 8, 131081, 2097190, 8, 131081, 2097191, 8, 131081, 2097192, 8, 131081, 2097193, 8, 131081, 2097194, 8, 131081, 2097195, 8, 131081, 2097196, 8, 131081, 2097197, 8, 131081, 2097198, 8, 131081, 2097199, 8, 131081, 2097200, 8, 131081, 2097201, 8, 131081, 2097202, 8, 131081, 2097203, 8, 131081, 2097204, 8, 131081, 2097205, 8, 131081, 2097206, 8, 131081, 2097207, 8, 131081, 2097208, 8, 131081, 2097209, 8, 131081, 2097210, 8, 131081, 2097211, 8, 131081, 2097212, 8, 131083, 2228223, 8, 65544, 2162688, 8, 131081, 2162689, 8, 131081, 2162690, 8, 131081, 2162691, 8, 131081, 2162692, 8, 131081, 2162693, 8, 131081, 2162694, 8, 131081, 2162695, 8, 131081, 2162696, 8, 131081, 2162697, 8, 131081, 2162698, 8, 131081, 2162699, 8, 131081, 2162700, 8, 131081, 2162701, 8, 131081, 2162702, 8, 131081, 2162703, 8, 131081, 2162704, 8, 131081, 2162705, 8, 131081, 2162706, 8, 131081, 2162707, 8, 131081, 2162708, 8, 131081, 2162709, 8, 131081, 2162710, 8, 131081, 2162711, 8, 131081, 2162712, 8, 131081, 2162713, 8, 131081, 2162714, 8, 131081, 2162715, 8, 131081, 2162716, 8, 131081, 2162717, 8, 131081, 2162718, 8, 131081, 2162719, 8, 131081, 2162720, 8, 131081, 2162721, 8, 131081, 2162722, 8, 131081, 2162723, 8, 131081, 2162724, 8, 131081, 2162725, 8, 131081, 2162726, 8, 131081, 2162727, 8, 131081, 2162728, 8, 131081, 2162729, 8, 131081, 2162730, 8, 131081, 2162731, 8, 131081, 2162732, 8, 131081, 2162733, 8, 131081, 2162734, 8, 131081, 2162735, 8, 131081, 2162736, 8, 131081, 2162737, 8, 131081, 2162738, 8, 131081, 2162739, 8, 131081, 2162740, 8, 131081, 2162741, 8, 131081, 2162742, 8, 131081, 2162743, 8, 131081, 2162744, 8, 131081, 2162745, 8, 131081, 2162746, 8, 131081, 2162747, 8, 131081, 2162748, 8, 131083, 2293759, 8, 196616, 2228224, 8, 196617, 2228225, 8, 196617, 2228226, 8, 196617, 2228227, 8, 196617, 2228228, 8, 196617, 2228229, 8, 196617, 2228230, 8, 196617, 2228231, 8, 196617, 2228232, 8, 196617, 2228233, 8, 196617, 2228234, 8, 196617, 2228235, 8, 196617, 2228236, 8, 196617, 2228237, 8, 196617, 2228238, 8, 196617, 2228239, 8, 196617, 2228240, 8, 196617, 2228241, 8, 196617, 2228242, 8, 196617, 2228243, 8, 196617, 2228244, 8, 196617, 2228245, 8, 196617, 2228246, 8, 196617, 2228247, 8, 196617, 2228248, 8, 196617, 2228249, 8, 196617, 2228250, 8, 196617, 2228251, 8, 196617, 2228252, 8, 196617, 2228253, 8, 196617, 2228254, 8, 196617, 2228255, 8, 196617, 2228256, 8, 196617, 2228257, 8, 196617, 2228258, 8, 196617, 2228259, 8, 196617, 2228260, 8, 196617, 2228261, 8, 196617, 2228262, 8, 196617, 2228263, 8, 196617, 2228264, 8, 196617, 2228265, 8, 196617, 2228266, 8, 196617, 2228267, 8, 196617, 2228268, 8, 196617, 2228269, 8, 196617, 2228270, 8, 196617, 2228271, 8, 196617, 2228272, 8, 196617, 2228273, 8, 196617, 2228274, 8, 196617, 2228275, 8, 196617, 2228276, 8, 196617, 2228277, 8, 196617, 2228278, 8, 196617, 2228279, 8, 196617, 2228280, 8, 196617, 2228281, 8, 196617, 2228282, 8, 196617, 2228283, 8, 196617, 2228284, 8, 196619 )

[node name="palette" parent="TileMap" instance=ExtResource( 4 )]
material = SubResource( 29 )

[node name="fast_glider" parent="." instance=ExtResource( 2 )]
position = Vector2( 489, 429 )

[node name="state_animation" parent="fast_glider" index="2"]
anims/RESET = SubResource( 4 )
anims/air = SubResource( 5 )
anims/close_wings = SubResource( 6 )
anims/die = SubResource( 7 )
anims/failed_flap = SubResource( 8 )
anims/failed_glide_flap = SubResource( 9 )
anims/flap = SubResource( 10 )
anims/glide = SubResource( 11 )
anims/glide_fail = SubResource( 12 )
anims/glide_flap = SubResource( 13 )
anims/glide_opposite_fail = SubResource( 14 )
anims/spread_wings = SubResource( 15 )

[node name="Sprite" parent="fast_glider/pivot" index="0"]
material = SubResource( 18 )

[node name="palette" parent="fast_glider/pivot/Sprite/palette_manager" index="0"]
palette = PoolColorArray( 0.129412, 0.0627451, 0.0627451, 1, 0.352941, 0.580392, 0, 1, 0.807843, 0.905882, 0.482353, 1, 1, 1, 1, 1 )
material = SubResource( 18 )
string_val = "[\"ff211010\",\"ff5a9400\",\"ffcee77b\",\"ffffffff\"]"

[node name="AnimationPlayer" parent="fast_glider/HUD/HBoxContainer/energy_bar" index="0"]
anims/RESET = SubResource( 19 )
anims/low = SubResource( 20 )

[editable path="fast_glider"]
